{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducers.js","redux/store.js","components/Section.js","redux/contacts/contacts-selector.js","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","id","uuidv4","deleteContacts","updateFilter","items","createReducer","state","filter","contact","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","contacts","persistReducer","reducers","store","configureStore","reducer","devTools","process","persistor","persistStore","Section","title","children","getItems","getFilter","filteredContacts","lowerCaseFilter","toLowerCase","person","includes","getFiltredContacts","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","currentTarget","value","className","s","form","onSubmit","preventDefault","find","checkName","checkNumber","test","checkValidNumber","alert","label","input","type","onChange","autoComplete","button","ContactList","list","map","item","btn","onClick","icon","Filter","target","App","container","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8a282626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3Rk3b\",\"input\":\"Filter_input__FfsHe\"};","import {\n  ADD_CONTACTS,\n  UPDATE_FILTER,\n  DELETE_CONTACTS,\n} from './contacts-types';\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContacts = createAction(\n  ADD_CONTACTS,\n  (name, number) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  }),\n);\n\nexport const deleteContacts = createAction(\n  DELETE_CONTACTS,\n);\nexport const updateFilter = createAction(UPDATE_FILTER);\n\n// export const addContacts = (id, name, number) => ({\n//   type: actionTypes.ADD_CONTACTS,\n//   payload: { id, name, number },\n// });\n\n// export const deleteContacts = id => ({\n//   type: actionTypes.DELETE_CONTACTS,\n//   payload: { id },\n// });\n\n// export const updateFilter = text => ({\n//   type: actionTypes.UPDATE_FILTER,\n//   payload: { text },\n// });\n\n// export const deleteFilter = () => ({\n//   type: actionTypes.CLEAR_FILTER,\n// });\n","export const ADD_CONTACTS = 'contacts/AddContacts';\nexport const DELETE_CONTACTS = 'contacts/DeleteContacts';\nexport const UPDATE_FILTER = 'filter/UpdateFilter';\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContacts,\n  deleteContacts,\n  updateFilter,\n} from './contacts-action';\n\nconst items = createReducer([], {\n  [addContacts]: (state, { payload }) => [\n    payload,\n    ...state,\n  ],\n  [deleteContacts]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// const contactsReducer = (\n//   state = [],\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case ADD_CONTACTS:\n//       return [payload, ...state];\n\n//     case DELETE_CONTACTS:\n//       return state.filter(\n//         contact => contact.id !== payload.id,\n//       );\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case UPDATE_FILTER:\n//       return payload.text;\n//     case CLEAR_FILTER:\n//       return;\n//     default:\n//       return state;\n//   }\n// };\n","import {\n  combineReducers,\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducers from './contacts/contacts-reducers';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [\n        FLUSH,\n        REHYDRATE,\n        PAUSE,\n        PERSIST,\n        PURGE,\n        REGISTER,\n      ],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  contacts: persistReducer(persistConfig, reducers),\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n\n// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const rootReducer = combineReducers({\n//   contacts: reducers,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(),\n// );\n\n// export default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      {title && <h1>{title}</h1>}\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n\n  const getFiltredContacts = contacts => {\n    const lowerCaseFilter = filter.toLowerCase();\n    return contacts.filter(person =>\n      person.name.toLowerCase().includes(lowerCaseFilter),\n    );\n  };\n  return getFiltredContacts(contacts);\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/contacts-action';\nimport { getItems } from '../../redux/contacts/contacts-selector';\nimport s from './Form.module.css';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkName = name => {\n    return contacts.find(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkNumber = number => {\n    return contacts.find(\n      contact => contact.number === number,\n    );\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkName(name)) {\n      alert(`${name} is already in your phonebook, bro!`);\n    } else if (checkNumber(number)) {\n      alert(\n        `${number} is already in your phonebook, bro!`,\n      );\n    } else if (checkValidNumber(number)) {\n      alert(`Enter valid number please`);\n    } else {\n      dispatch(addContacts(name, number));\n    }\n    resetInput();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './ContactList.module.css';\nimport { FaRegTimesCircle } from 'react-icons/fa';\nimport { deleteContacts } from '../../redux/contacts/contacts-action';\nimport { filteredContacts } from '../../redux/contacts/contacts-selector';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.contact}>\n              {name} : {number}\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => dispatch(deleteContacts(id))}\n            >\n              <FaRegTimesCircle className={s.icon} />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contacts-action';\nimport { getFilter } from '../../redux/contacts/contacts-selector';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <label className={s.label}>\n      <p className={s.contacts}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={e =>\n            dispatch(updateFilter(e.target.value))\n          }\n        />\n      </p>\n    </label>\n  );\n};\n\nexport default Filter;\n","import Section from './components/Section';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport s from './components/Form/Form.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3BQUB\",\"form\":\"Form_form__2LnKL\",\"label\":\"Form_label__3k1N8\",\"input\":\"Form_input__1vpB1\",\"button\":\"Form_button__2fZ-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1G-9c\",\"item\":\"ContactList_item__XyyS2\",\"btn\":\"ContactList_btn__19_Iz\",\"icon\":\"ContactList_icon__YTWzj\"};"],"sourceRoot":""}